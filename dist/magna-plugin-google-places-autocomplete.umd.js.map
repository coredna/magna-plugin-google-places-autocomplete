{"version":3,"file":"magna-plugin-google-places-autocomplete.umd.js","sources":["../src/index.js"],"sourcesContent":["import $ from 'jquery'\r\nimport { Plugin, State } from '@coredna/magna'\r\n\r\nexport default class GooglePlacesAutocomplete extends Plugin {\r\n\r\n  [Symbol.toStringTag] = 'GooglePlacesAutocomplete'\r\n\r\n  autocomplete = null\r\n\r\n  _state = new State({})\r\n\r\n  /**\r\n   * Using this format you can specify the fields you wish to use from google autocomplete and their matching input selector\r\n   *\r\n   * @type {{country: {selector: string, type: string}, unit: {selector: string, type: string}, address: {selector: string, type: string}, city: {selector: string, type: string}, postcode: {selector: string, type: string}, state: {selector: string, type: string}}}\r\n   */\r\n   static prefixDefaultFields = prefix => ({\r\n    country:  { selector: `[name=\"${prefix}countryid\"]`, type: 'short_name' },\r\n    unit:     { selector: `[name=\"${prefix}address2\"]`, type: 'long_name' },\r\n    address:  { selector: `[name=\"${prefix}address1\"]`, type: 'long_name' },\r\n    postcode: { selector: `[name=\"${prefix}postcode\"]`, type: 'short_name' },\r\n    city:     { selector: `[name=\"${prefix}city\"]`, type: 'long_name' },\r\n    state:    { selector: `[name=\"${prefix}state\"]`, type: 'short_name' },\r\n  })\r\n\r\n  // Create the default fields without a prefix\r\n  static defaultFields = GooglePlacesAutocomplete.prefixDefaultFields('')\r\n\r\n\r\n  static defaultConfig = {\r\n    API_KEY: '',\r\n    country: 'US',\r\n    fields: {},\r\n    language: 'en-US',\r\n    selector: '#google-autocomplete',\r\n  }\r\n\r\n\r\n  constructor(config) {\r\n    super(config);\r\n    if (!this.config.API_KEY)\r\n      throw new Error('missing google places API_KEY from config')\r\n  }\r\n\r\n\r\n  initPromise({ request }) {\r\n    return this.#loadPlacesApi({ request, config: this.config })\r\n  }\r\n\r\n\r\n  init({ request, config }) {\r\n    this._state.subscribe('fields', this.config.updateFields || this.updateFields)\r\n  }\r\n\r\n\r\n  #reduceAddressComponents = (addressComponents, accumulator = {}) =>\r\n    // key the address components by their first declared type\r\n    addressComponents.reduce((acc, x) => ({\r\n      ...acc,\r\n      [x.types[0]]: {\r\n        long_name: x.long_name,\r\n        short_name: x.short_name,\r\n      }\r\n    }), {})\r\n\r\n\r\n  #normalizeAddressComponents = addressObj =>\r\n    // loop through componentForm attempting to fill in each `name` in the fields object using the `key` for the address object above\r\n    componentForm.reduce((acc, { key, type, name }) => ({\r\n      ...acc,\r\n      ...(typeof acc[name] === 'undefined' && {\r\n        [name]: addressObj[key]\r\n      })\r\n    }), {})\r\n\r\n\r\n  #initializeAutocomplete() {\r\n    // don't initialize the autocomplete on localhost as the google api key will fail\r\n    if (location.hostname === 'localhost' || location.hostname === '127.0.0.1')\r\n      return false\r\n    this.$input = $(this.config.selector)\r\n    // initialize google autocomplete\r\n    this.autocomplete = new google.maps.places.Autocomplete(\r\n      this.$input.get(0),\r\n      {\r\n        types: ['geocode'],\r\n        componentRestrictions: { country: this.config.country }\r\n      });\r\n    this.autocomplete.addListener('place_changed', this.onPlaceChanged);\r\n    // disable the enter key in the autosuggest\r\n    this.$input.on('keydown keyup keypress', this.#disableEnter)\r\n  }\r\n\r\n  onPlaceChanged = () => {\r\n    const value = this.$input.val()\r\n    // the street address that is returned from google generally misses unit numbers\r\n    // we will grab everything before the first comma to set the street address\r\n    const address = value.substr(0, value.indexOf(','))\r\n\r\n    const place = this.autocomplete.getPlace();\r\n    const addressComponents = place.address_components\r\n    const addressComponentObject = this.#reduceAddressComponents(addressComponents)\r\n    const normalized = this.#normalizeAddressComponents(addressComponentObject)\r\n    // take the normalized field values, using the type specified in the `fields` object\r\n    const fields = Object.keys(this.config.fields).reduce((acc, key) => ({\r\n      ...acc,\r\n      ...(typeof normalized[key] !== 'undefined' && {\r\n        [key]: normalized[key][this.config.fields[key].type]\r\n      }),\r\n    }), { address })\r\n    // allow access to the place from the configuration\r\n    if (typeof this.config.onPlaceChanged === 'function') {\r\n      const result = this.config.onPlaceChanged.call(this, {\r\n        place,\r\n        addressComponentObject,\r\n        address: normalized,\r\n        fields\r\n      })\r\n      // allow overriding the default behavior by returning false\r\n      if (result === false) {\r\n        return\r\n      }\r\n    }\r\n\r\n    this._state.setState('fields', _ => fields)\r\n    // the original google address response is saved incase there are any issues\r\n    this._state.addressComponents = addressComponents\r\n  }\r\n\r\n\r\n  updateFields = values => {\r\n    Object.keys(this.config.fields).forEach(key => {\r\n      const field = this.config.fields[key]\r\n      $(field.selector).val(values[key])\r\n    })\r\n  }\r\n\r\n\r\n  #loadPlacesApi = ({ config }) => new Promise((res, rej) => {\r\n    if (window?.google?.maps) {\r\n      this.#initializeAutocomplete()\r\n      return res()\r\n    }\r\n    window.initAutocomplete = this.#initializeAutocomplete.bind(this)\r\n    const script = document.createElement('script')\r\n    script.src=`https://maps.google.com/maps/api/js?` + $.param({\r\n      libraries: 'places',\r\n      language: config.language,\r\n      callback: 'initAutocomplete',\r\n      key: config.API_KEY\r\n    })\r\n    script.onload = () => res({ success: true, message: 'google autocomplete loaded' })\r\n    script.onerror = () => rej(new Error('failed to load google places autocomplete'))\r\n    document.head.appendChild(script)\r\n  })\r\n\r\n\r\n  #disableEnter = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n    }\r\n  }\r\n\r\n}\r\n/*\r\n * this will attempt to find the most relevant piece of information from the google response\r\n * to normalize the names to more closely match core dna. we will loop through each key until we find one that matches\r\n * */\r\n\r\n/**\r\n *\r\n * @param {String}  name  name of the normalized key\r\n * @param {Array<String>}  order  order of lookup for the google address component type, higher index means higher precedence\r\n * @returns {key, name}\r\n */\r\nconst createComponentLookup = (name, order) =>\r\n  order.map(key => ({\r\n    key,\r\n    name\r\n  }))\r\n\r\nconst componentForm = [\r\n  ...createComponentLookup('street_number', ['street_number']),\r\n  ...createComponentLookup('street', ['street']),\r\n  ...createComponentLookup('city', ['locality', 'sublocality', 'neighborhood', 'postal_town', 'colloquial_area']),\r\n  ...createComponentLookup('suburb', ['postal_town', 'neighborhood', 'colloquial_area', 'locality', 'sublocality']),\r\n  ...createComponentLookup('postcode', ['postal_code', 'postal_code_prefix']),\r\n  ...createComponentLookup('state', ['administrative_area_level_1', 'administrative_area_level_2']),\r\n  ...createComponentLookup('country', ['country']),\r\n]\r\n"],"names":["Symbol","toStringTag","GooglePlacesAutocomplete","config","State","addressComponents","reduce","acc","x","types","long_name","short_name","addressObj","componentForm","key","type","name","value","$input","val","address","substr","indexOf","place","autocomplete","getPlace","address_components","addressComponentObject","normalized","fields","Object","keys","onPlaceChanged","result","call","_state","setState","_","values","forEach","field","$","selector","Promise","res","rej","window","google","maps","initAutocomplete","bind","script","document","createElement","src","param","libraries","language","callback","API_KEY","onload","success","message","onerror","Error","head","appendChild","e","keyCode","preventDefault","stopPropagation","request","subscribe","updateFields","Plugin","prefix","country","unit","postcode","city","state","prefixDefaultFields","location","hostname","places","Autocomplete","get","componentRestrictions","addListener","on","createComponentLookup","order","map"],"mappings":"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"}